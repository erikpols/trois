import{toRef as Ne,watch as d,ref as Jr,defineComponent as a,watchEffect as Qr,inject as V,provide as es,getCurrentInstance as ts,onUnmounted as rs,createApp as ss}from"https://unpkg.com/vue@3.2.20/dist/vue.esm-browser.prod.js";import{Vector3 as F,Raycaster as is,Plane as J,Vector2 as A,InstancedMesh as ge,WebGLRenderer as ns,OrthographicCamera as os,PerspectiveCamera as as,Scene as hs,Color as Q,Texture as ds,Group as us,WebGLCubeRenderTarget as cs,RGBAFormat as ls,LinearMipmapLinearFilter as ms,CubeCamera as ps,Mesh as fs,BufferGeometry as ys,BufferAttribute as gs,BoxGeometry as Oe,CircleGeometry as bs,ConeGeometry as vs,CylinderGeometry as Ss,DodecahedronGeometry as Ps,ExtrudeGeometry as ws,IcosahedronGeometry as xs,LatheGeometry as Ms,OctahedronGeometry as Cs,PlaneGeometry as $e,PolyhedronGeometry as Gs,RingGeometry as Ls,SphereGeometry as Ns,ShapeGeometry as Os,TetrahedronGeometry as $s,TorusGeometry as zs,TorusKnotGeometry as Es,CatmullRomCurve3 as ze,Curve as Rs,TubeGeometry as js,SpotLight as be,DirectionalLight as ve,AmbientLight as ks,HemisphereLight as Is,PointLight as _s,RectAreaLight as Ts,MeshBasicMaterial as Ee,MeshLambertMaterial as As,MeshPhongMaterial as Bs,MeshPhysicalMaterial as Ds,PointsMaterial as Fs,ShadowMaterial as Us,MeshStandardMaterial as Hs,MeshToonMaterial as Ks,TextureLoader as ee,MeshMatcapMaterial as Vs,ShaderMaterial as Se,ShaderChunk as X,UniformsUtils as Re,ShaderLib as Xs,CubeReflectionMapping as qs,CubeTextureLoader as Ws,VideoTexture as Zs,DoubleSide as Ys,SpriteMaterial as Js,Sprite as Qs,Points as ei,GridHelper as ti}from"https://cdn.skypack.dev/three@0.136.0/build/three.module.js";import{OrbitControls as ri}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/controls/OrbitControls.js";import{RectAreaLightUniformsLib as si}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/lights/RectAreaLightUniformsLib.js";import{RectAreaLightHelper as ii}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/helpers/RectAreaLightHelper.js";import{TextGeometry as ni}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/geometries/TextGeometry.js";import{FontLoader as oi}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/loaders/FontLoader.js";import{GLTFLoader as ai}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/loaders/GLTFLoader.js";import{FBXLoader as hi}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/loaders/FBXLoader.js";import{EffectComposer as di}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/EffectComposer.js";import{RenderPass as ui}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/RenderPass.js";import{BokehPass as ci}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/BokehPass.js";import{FilmPass as li}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/FilmPass.js";import{ShaderPass as oe}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/ShaderPass.js";import{FXAAShader as mi}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/shaders/FXAAShader.js";import{HalftonePass as pi}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/HalftonePass.js";import{SMAAPass as fi}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/SMAAPass.js";import{SSAOPass as yi}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/SSAOPass.js";import{UnrealBloomPass as gi}from"https://cdn.skypack.dev/three@0.136.0/examples/jsm/postprocessing/UnrealBloomPass.js";function q(e,t,r){t instanceof Object&&Object.entries(t).forEach(([s,i])=>{r?r(e,s,i):e[s]=i})}function B(e,t,r,s=!0,i){s&&q(r,e[t],i);const n=Ne(e,t);return d(n,o=>{q(r,o,i)})}function je(e,t,r=!0,s){r&&q(t,e,s);const i=Jr(e);return d(i,n=>{q(t,n,s)},{deep:!0})}function W(e,t){t instanceof Object&&Object.entries(t).forEach(([r,s])=>{e[r]=s})}function ke(e,t,r){t.forEach(s=>{l(e,s,r,s)})}function l(e,t,r,s){const i=s||t,n=Ne(e,t);n.value instanceof Object?(W(r[i],n.value),d(n,o=>{W(r[i],o)},{deep:!0})):(n.value!==void 0&&(r[i]=e[t]),d(n,o=>{r[i]=o}))}function te(e,t=[]){const r={};return Object.entries(e).forEach(([s,i])=>{(!t||!t.includes(s))&&(r[s]=i)}),r}function Ie(e,t,r){return r=r<0?0:r,r=r>1?1:r,e+(t-e)*r}function _e(e,t,r){return e<t?t:e>r?r:e}const bi="https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d",vi="0404E8_0404B5_0404CB_3333FC";function Pe(e=vi,t=1024){const r=`${e}${Si(t)}.png`;return`${bi}/${t}/${r}`}function Si(e){switch(e){case 64:return"-64px";case 128:return"-128px";case 256:return"-256px";case 512:return"-512px";default:return""}}function Pi(e){const{camera:t,resetPosition:r=new F(0,0,0)}=e,s=new is,i=r.clone(),n=new J(new F(0,0,1),0);return{position:i,updatePosition:o=>{s.setFromCamera(o,t),t.getWorldDirection(n.normal),s.ray.intersectPlane(n,i)},intersect:(o,c,G=!1)=>(s.setFromCamera(o,t),s.intersectObjects(c,G))}}function Te(e){const{camera:t,domElement:r,intersectObjects:s,intersectRecursive:i=!1,touch:n=!0,resetOnEnd:o=!1,onEnter:c=()=>{},onMove:G=()=>{},onLeave:L=()=>{},onClick:y=()=>{},onIntersectEnter:N=()=>{},onIntersectOver:z=()=>{},onIntersectMove:b=()=>{},onIntersectLeave:U=()=>{},onIntersectClick:H=()=>{}}=e,p=new A(0,0),f=new A(0,0),E=Pi({camera:t}),h=E.position,u={position:p,positionN:f,positionV3:h,intersectObjects:s,listeners:!1,addListeners:Zr,removeListeners:Yr,intersect:xe};return u;function O(){p.set(0,0),f.set(0,0),h.set(0,0,0)}function P(m){let w,T;m.touches&&m.touches.length>0?(w=m.touches[0].clientX,T=m.touches[0].clientY):(w=m.clientX,T=m.clientY);const R=r.getBoundingClientRect();p.x=w-R.left,p.y=T-R.top,f.x=p.x/R.width*2-1,f.y=-(p.y/R.height)*2+1,E.updatePosition(f)}function xe(){const m=Ce();if(m.length){const w=E.intersect(f,m,i),T=[...m],R=[];w.forEach(j=>{var D,k,v;const{object:x}=j,M=fe(x);if(x instanceof ge){if(R.indexOf(x)!==-1)return;R.push(x)}if(!x.userData.over){x.userData.over=!0;const ye={type:"pointerover",over:!0,component:M,intersect:j},Le={...ye,type:"pointerenter"};z(ye),N(Le),(D=M==null?void 0:M.onPointerOver)==null||D.call(M,ye),(k=M==null?void 0:M.onPointerEnter)==null||k.call(M,Le)}const Ge={type:"pointermove",component:M,intersect:j};b(Ge),(v=M==null?void 0:M.onPointerMove)==null||v.call(M,Ge),T.splice(T.indexOf(x),1)}),T.forEach(j=>{var D,k;const v=fe(j);if(j.userData.over){j.userData.over=!1;const x={type:"pointerover",over:!1,component:v},M={...x,type:"pointerleave"};z(x),U(M),(D=v==null?void 0:v.onPointerOver)==null||D.call(v,x),(k=v==null?void 0:v.onPointerLeave)==null||k.call(v,M)}})}}function se(m){P(m),c({type:"pointerenter",position:p,positionN:f,positionV3:h})}function ie(m){P(m),G({type:"pointermove",position:p,positionN:f,positionV3:h}),xe()}function Me(m){P(m);const w=Ce();if(w.length){const T=E.intersect(f,w,i),R=[];T.forEach(j=>{var D;const{object:k}=j,v=fe(k);if(k instanceof ge){if(R.indexOf(k)!==-1)return;R.push(k)}const x={type:"click",component:v,intersect:j};H(x),(D=v==null?void 0:v.onClick)==null||D.call(v,x)})}y({type:"click",position:p,positionN:f,positionV3:h})}function ne(){o&&O(),L({type:"pointerleave"})}function fe(m){if(m.userData.component)return m.userData.component;let w=m.parent;for(;w;){if(w.userData.component)return w.userData.component;w=w.parent}}function Ce(){return typeof s=="function"?s():s}function Zr(){r.addEventListener("mouseenter",se),r.addEventListener("mousemove",ie),r.addEventListener("mouseleave",ne),r.addEventListener("click",Me),n&&(r.addEventListener("touchstart",se),r.addEventListener("touchmove",ie),r.addEventListener("touchend",ne)),u.listeners=!0}function Yr(){r.removeEventListener("mouseenter",se),r.removeEventListener("mousemove",ie),r.removeEventListener("mouseleave",ne),r.removeEventListener("click",Me),r.removeEventListener("touchstart",se),r.removeEventListener("touchmove",ie),r.removeEventListener("touchend",ne),u.listeners=!1}}function wi(e){const t={antialias:!0,alpha:!1,autoClear:!0,orbitCtrl:!1,pointer:!1,resize:!1,width:300,height:150};e&&Object.entries(e).forEach(([h,u])=>{t[h]=u});const r={width:1,height:1,wWidth:1,wHeight:1,ratio:1},s=[],i=[],n=c(),o={config:t,renderer:n,size:r,init:G,dispose:H,render:N,renderC:z,setSize:f,addIntersectObject:b,removeIntersectObject:U};return o;function c(){const h=new ns({canvas:t.canvas,antialias:t.antialias,alpha:t.alpha,...t.params});return h.autoClear=t.autoClear,h}function G(){if(!o.scene)return console.error("Missing Scene"),!1;if(!o.camera)return console.error("Missing Camera"),!1;if(t.resize?(p(),window.addEventListener("resize",p)):t.width&&t.height&&f(t.width,t.height),L(),t.orbitCtrl){const h=new ri(o.camera,o.renderer.domElement);t.orbitCtrl instanceof Object&&Object.entries(t.orbitCtrl).forEach(([u,O])=>{h[u]=O}),y(()=>{h.update()}),o.cameraCtrl=h}return!0}function L(){let h={camera:o.camera,domElement:o.renderer.domElement,intersectObjects:i};t.pointer&&t.pointer instanceof Object&&(h={...h,...t.pointer});const u=o.pointer=Te(h);(t.pointer||i.length)&&(u.addListeners(),h.intersectMode==="frame"&&y(u.intersect))}function y(h){s.push(h)}function N(){s.forEach(h=>h()),o.renderer.render(o.scene,o.camera)}function z(){s.forEach(h=>h()),o.composer.render()}function b(h){i.indexOf(h)===-1&&i.push(h),o.pointer&&!o.pointer.listeners&&o.pointer.addListeners()}function U(h){const u=i.indexOf(h);u!==-1&&i.splice(u,1),o.pointer&&!t.pointer&&i.length===0&&o.pointer.removeListeners()}function H(){window.removeEventListener("resize",p),o.pointer&&o.pointer.removeListeners(),o.cameraCtrl&&o.cameraCtrl.dispose(),o.renderer&&o.renderer.dispose()}function p(){var h;if(t.resize==="window")f(window.innerWidth,window.innerHeight);else{const u=o.renderer.domElement.parentNode;u&&f(u.clientWidth,u.clientHeight)}(h=t.onResize)==null||h.call(t,r)}function f(h,u){r.width=h,r.height=u,r.ratio=h/u,o.renderer.setSize(h,u,!1);const O=o.camera;if(O.type==="PerspectiveCamera"){const P=O;P.aspect=r.ratio,P.updateProjectionMatrix()}if(O.type==="OrthographicCamera"){const P=O;r.wWidth=P.right-P.left,r.wHeight=P.top-P.bottom}else{const P=E();r.wWidth=P[0],r.wHeight=P[1]}}function E(){const h=o.camera,u=h.fov*Math.PI/180,O=2*Math.tan(u/2)*Math.abs(h.position.z);return[O*h.aspect,O]}}const $=Symbol("Renderer");var Ae=a({name:"Renderer",props:{params:{type:Object,default:()=>({})},antialias:Boolean,alpha:Boolean,autoClear:{type:Boolean,default:!0},orbitCtrl:{type:[Boolean,Object],default:!1},pointer:{type:[Boolean,Object],default:!1},resize:{type:[Boolean,String],default:!1},shadow:Boolean,width:String,height:String,pixelRatio:Number,xr:Boolean,props:{type:Object,default:()=>({})},onReady:Function},inheritAttrs:!1,setup(e,{attrs:t}){const r=[],s=[],i=[],n=[],o=[],c=document.createElement("canvas");Object.entries(t).forEach(([N,z])=>{const b=N.match(/^on([A-Z][a-zA-Z]*)$/);b?c.addEventListener(b[1].toLowerCase(),z):c.setAttribute(N,z)});const G={canvas:c,params:e.params,antialias:e.antialias,alpha:e.alpha,autoClear:e.autoClear,orbitCtrl:e.orbitCtrl,pointer:e.pointer,resize:e.resize};e.width&&(G.width=parseInt(e.width)),e.height&&(G.height=parseInt(e.height));const L=wi(G);B(e,"props",L.renderer),Qr(()=>{e.pixelRatio&&L.renderer.setPixelRatio(e.pixelRatio)});const y=()=>{};return{canvas:c,three:L,renderer:L.renderer,size:L.size,renderFn:y,raf:!0,initCallbacks:r,mountedCallbacks:s,beforeRenderCallbacks:i,afterRenderCallbacks:n,resizeCallbacks:o}},computed:{camera:{get:function(){return this.three.camera},set:function(e){this.three.camera=e}},scene:{get:function(){return this.three.scene},set:function(e){this.three.scene=e}},composer:{get:function(){return this.three.composer},set:function(e){this.three.composer=e}}},provide(){return{[$]:this}},mounted(){var e;this.$el.parentNode.insertBefore(this.canvas,this.$el),this.three.init()&&(this.three.pointer&&(this.$pointer=this.three.pointer),this.three.config.onResize=t=>{this.resizeCallbacks.forEach(r=>r({type:"resize",renderer:this,size:t}))},this.shadow&&(this.renderer.shadowMap.enabled=!0),this.renderFn=this.three.composer?this.three.renderC:this.three.render,this.initCallbacks.forEach(t=>t({type:"init",renderer:this})),(e=this.onReady)==null||e.call(this,this),this.xr?(this.renderer.xr.enabled=!0,this.renderer.setAnimationLoop(this.render)):requestAnimationFrame(this.renderLoop)),this.mountedCallbacks.forEach(t=>t({type:"mounted",renderer:this}))},beforeUnmount(){this.canvas.remove(),this.beforeRenderCallbacks=[],this.afterRenderCallbacks=[],this.raf=!1,this.three.dispose()},methods:{onInit(e){this.addListener("init",e)},onMounted(e){this.addListener("mounted",e)},onBeforeRender(e){this.addListener("beforerender",e)},offBeforeRender(e){this.removeListener("beforerender",e)},onAfterRender(e){this.addListener("afterrender",e)},offAfterRender(e){this.removeListener("afterrender",e)},onResize(e){this.addListener("resize",e)},offResize(e){this.removeListener("resize",e)},addListener(e,t){this.getCallbacks(e).push(t)},removeListener(e,t){const r=this.getCallbacks(e),s=r.indexOf(t);s!==-1&&r.splice(s,1)},getCallbacks(e){return e==="init"?this.initCallbacks:e==="mounted"?this.mountedCallbacks:e==="beforerender"?this.beforeRenderCallbacks:e==="afterrender"?this.afterRenderCallbacks:this.resizeCallbacks},render(e){this.beforeRenderCallbacks.forEach(t=>t({type:"beforerender",renderer:this,time:e})),this.renderFn({renderer:this,time:e}),this.afterRenderCallbacks.forEach(t=>t({type:"afterrender",renderer:this,time:e}))},renderLoop(e){this.raf&&requestAnimationFrame(this.renderLoop),this.render(e)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Renderer"}),Be=a({props:{props:{type:Object,default:()=>({})}},render(){return this.$slots.default?this.$slots.default():[]}});function ae(e,t,r,s=!0){e[t]=r,s&&e.updateProjectionMatrix()}var De=a({extends:Be,name:"OrthographicCamera",props:{left:{type:Number,default:-1},right:{type:Number,default:1},top:{type:Number,default:1},bottom:{type:Number,default:-1},near:{type:Number,default:.1},far:{type:Number,default:2e3},zoom:{type:Number,default:1},position:{type:Object,default:()=>({x:0,y:0,z:0})}},setup(e){const t=V($);if(!t){console.error("Renderer not found");return}const r=new os(e.left,e.right,e.top,e.bottom,e.near,e.far);return t.camera=r,l(e,"position",r),B(e,"props",r,!0,ae),["left","right","top","bottom","near","far","zoom"].forEach(s=>{d(()=>e[s],i=>{ae(r,s,i)})}),{renderer:t,camera:r}},__hmrId:"OrthographicCamera"}),he=a({extends:Be,name:"PerspectiveCamera",props:{aspect:{type:Number,default:1},far:{type:Number,default:2e3},fov:{type:Number,default:50},near:{type:Number,default:.1},position:{type:Object,default:()=>({x:0,y:0,z:0})},lookAt:{type:Object,default:null}},setup(e){var t;const r=V($);if(!r){console.error("Renderer not found");return}const s=new as(e.fov,e.aspect,e.near,e.far);return r.camera=s,l(e,"position",s),e.lookAt&&s.lookAt((t=e.lookAt.x)!=null?t:0,e.lookAt.y,e.lookAt.z),d(()=>e.lookAt,i=>{var n;s.lookAt((n=i.x)!=null?n:0,i.y,i.z)},{deep:!0}),B(e,"props",s,!0,ae),["aspect","far","fov","near"].forEach(i=>{d(()=>e[i],n=>{ae(s,i,n)})}),{renderer:r,camera:s}},__hmrId:"PerspectiveCamera"});const de=Symbol("Scene");var Fe=a({name:"Scene",props:{background:[String,Number,Object]},setup(e){const t=V($),r=new hs;if(!t){console.error("Renderer not found");return}t.scene=r,es(de,r);const s=i=>{!i||(typeof i=="string"||typeof i=="number"?r.background instanceof Q?r.background.set(i):r.background=new Q(i):i instanceof ds&&(r.background=i))};return s(e.background),d(()=>e.background,s),{scene:r,add:i=>{r.add(i)},remove:i=>{r.remove(i)}}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Scene"});const xi={onPointerEnter:Function,onPointerOver:Function,onPointerMove:Function,onPointerLeave:Function,onPointerDown:Function,onPointerUp:Function,onClick:Function};var I=a({name:"Object3D",inject:{renderer:$,scene:de},emits:["created","ready"],props:{position:{type:Object,default:()=>({x:0,y:0,z:0})},rotation:{type:Object,default:()=>({x:0,y:0,z:0})},scale:{type:Object,default:()=>({x:1,y:1,z:1,order:"XYZ"})},lookAt:{type:Object,default:null},userData:{type:Object,default:()=>({})},visible:{type:Boolean,default:!0},props:{type:Object,default:()=>({})},disableAdd:{type:Boolean,default:!1},disableRemove:{type:Boolean,default:!1},...xi},setup(){return{}},created(){this.renderer||console.error("Missing parent Renderer"),this.scene||console.error("Missing parent Scene")},unmounted(){this.disableRemove||this.removeFromParent(),this.o3d&&this.renderer&&this.renderer.three.removeIntersectObject(this.o3d)},methods:{initObject3D(e){var t;this.o3d=e,e.userData.component=this,(this.onPointerEnter||this.onPointerOver||this.onPointerMove||this.onPointerLeave||this.onPointerDown||this.onPointerUp||this.onClick)&&this.renderer&&this.renderer.three.addIntersectObject(e),l(this,"position",e),l(this,"rotation",e),l(this,"scale",e),l(this,"userData",e.userData),l(this,"visible",e),B(this,"props",e),this.$emit("created",e),this.lookAt&&e.lookAt((t=this.lookAt.x)!=null?t:0,this.lookAt.y,this.lookAt.z),d(()=>this.lookAt,r=>{var s;e.lookAt((s=r.x)!=null?s:0,r.y,r.z)},{deep:!0}),this.parent=this.getParent(),this.disableAdd||(this.addToParent()?this.$emit("ready",this):console.error("Missing parent (Scene, Group...)"))},getParent(){let e=this.$parent;if(!e){const t=ts();t&&t.parent&&(e=t.parent.ctx)}for(;e;){if(e.add)return e;e=e.$parent}},addToParent(e){const t=e||this.o3d;return this.parent?(this.parent.add(t),!0):!1},removeFromParent(e){const t=e||this.o3d;return this.parent?(this.parent.remove(t),!0):!1},add(e){var t;(t=this.o3d)==null||t.add(e)},remove(e){var t;(t=this.o3d)==null||t.remove(e)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Object3D"}),Ue=a({name:"Group",extends:I,setup(){return{group:new us}},created(){this.initObject3D(this.group)},__hmrId:"Group"});const re=()=>{};var He=a({name:"Raycaster",props:{onPointerEnter:{type:Function,default:re},onPointerOver:{type:Function,default:re},onPointerMove:{type:Function,default:re},onPointerLeave:{type:Function,default:re},onClick:{type:Function,default:re},intersectMode:{type:String,default:"move"},intersectRecursive:{type:Boolean,default:!1}},setup(){return{renderer:V($)}},mounted(){if(!this.renderer){console.error("Renderer not found");return}const e=this.renderer;this.renderer.onMounted(()=>{!e.camera||(this.pointer=Te({camera:e.camera,domElement:e.canvas,intersectObjects:()=>e.scene?e.scene.children:[],intersectRecursive:this.intersectRecursive,onIntersectEnter:this.onPointerEnter,onIntersectOver:this.onPointerOver,onIntersectMove:this.onPointerMove,onIntersectLeave:this.onPointerLeave,onIntersectClick:this.onClick}),this.pointer.addListeners(),this.intersectMode==="frame"&&e.onBeforeRender(this.pointer.intersect))})},unmounted(){var e;this.pointer&&(this.pointer.removeListeners(),(e=this.renderer)==null||e.offBeforeRender(this.pointer.intersect))},render(){return[]},__hmrId:"Raycaster"}),Ke=a({extends:I,props:{cubeRTSize:{type:Number,default:256},cubeCameraNear:{type:Number,default:.1},cubeCameraFar:{type:Number,default:2e3},autoUpdate:Boolean,hideMeshes:{type:Array,default:()=>[]}},setup(e){const t=V($);if(!t||!t.scene)return console.error("Missing Renderer / Scene"),{};const r=t.renderer,s=t.scene,i=new cs(e.cubeRTSize,{format:ls,generateMipmaps:!0,minFilter:ms}),n=new ps(e.cubeCameraNear,e.cubeCameraFar,i),o=()=>{e.hideMeshes.forEach(c=>{c.visible=!1}),n.update(r,s),e.hideMeshes.forEach(c=>{c.visible=!0})};return e.autoUpdate?(t.onBeforeRender(o),rs(()=>{t.offBeforeRender(o)})):t.onMounted(o),{cubeRT:i,cubeCamera:n,updateRT:o}},created(){this.cubeCamera&&this.initObject3D(this.cubeCamera)},render(){return[]},__hmrId:"CubeCamera"});const Z=Symbol("Mesh"),K=a({name:"Mesh",extends:I,props:{castShadow:Boolean,receiveShadow:Boolean},setup(){return{}},provide(){return{[Z]:this}},mounted(){!this.mesh&&!this.loading&&this.initMesh()},methods:{initMesh(){const e=new fs(this.geometry,this.material);l(this,"castShadow",e),l(this,"receiveShadow",e),this.mesh=e,this.initObject3D(e)},createGeometry(){},addGeometryWatchers(e){Object.keys(e).forEach(t=>{d(()=>this[t],()=>{this.refreshGeometry()})})},setGeometry(e){this.geometry=e,this.mesh&&(this.mesh.geometry=e)},setMaterial(e){this.material=e,this.mesh&&(this.mesh.material=e)},refreshGeometry(){const e=this.geometry;this.createGeometry(),this.mesh&&this.geometry&&(this.mesh.geometry=this.geometry),e==null||e.dispose()}},unmounted(){this.geometry&&this.geometry.dispose(),this.material&&this.material.dispose()},__hmrId:"Mesh"});function S(e,t,r){return a({name:e,extends:K,props:t,created(){this.createGeometry(),this.addGeometryWatchers(t)},methods:{createGeometry(){this.geometry=r(this)}}})}const ue=a({emits:["created"],props:{rotateX:Number,rotateY:Number,rotateZ:Number,attributes:{type:Array,default:()=>[]}},inject:{mesh:Z},setup(){return{}},created(){if(!this.mesh){console.error("Missing parent Mesh");return}this.createGeometry(),this.rotateGeometry(),this.geometry&&this.mesh.setGeometry(this.geometry),Object.keys(this.$props).forEach(e=>{d(()=>this[e],this.refreshGeometry)})},unmounted(){var e;(e=this.geometry)==null||e.dispose()},methods:{createGeometry(){const e={},t=new ys;this.attributes.forEach(r=>{if(r.name&&r.itemSize&&r.array){const s=e[r.name]=new gs(r.array,r.itemSize,r.normalized);t.setAttribute(r.name,s)}}),t.computeBoundingBox(),t.userData.component=this,this.geometry=t,this.$emit("created",t)},rotateGeometry(){!this.geometry||(this.rotateX&&this.geometry.rotateX(this.rotateX),this.rotateY&&this.geometry.rotateY(this.rotateY),this.rotateZ&&this.geometry.rotateZ(this.rotateZ))},refreshGeometry(){const e=this.geometry;this.createGeometry(),this.rotateGeometry(),this.geometry&&this.mesh&&this.mesh.setGeometry(this.geometry),e==null||e.dispose()}},render(){return[]}});function g(e,t,r){return a({name:e,extends:ue,props:t,methods:{createGeometry(){this.geometry=r(this),this.geometry.userData.component=this,this.$emit("created",this.geometry)}}})}const Ve={size:Number,width:{type:Number,default:1},height:{type:Number,default:1},depth:{type:Number,default:1},widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1},depthSegments:{type:Number,default:1}};function Xe(e){return e.size?new Oe(e.size,e.size,e.size,e.widthSegments,e.heightSegments,e.depthSegments):new Oe(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}var qe=g("BoxGeometry",Ve,Xe);const We={radius:{type:Number,default:1},segments:{type:Number,default:8},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function Ze(e){return new bs(e.radius,e.segments,e.thetaStart,e.thetaLength)}var Ye=g("CircleGeometry",We,Ze);const Je={radius:{type:Number,default:1},height:{type:Number,default:1},radialSegments:{type:Number,default:8},heightSegments:{type:Number,default:1},openEnded:{type:Boolean,default:!1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function Qe(e){return new vs(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}var et=g("ConeGeometry",Je,Qe);const tt={radiusTop:{type:Number,default:1},radiusBottom:{type:Number,default:1},height:{type:Number,default:1},radialSegments:{type:Number,default:8},heightSegments:{type:Number,default:1},openEnded:{type:Boolean,default:!1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function rt(e){return new Ss(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}var st=g("CylinderGeometry",tt,rt);const it={radius:{type:Number,default:1},detail:{type:Number,default:0}};function nt(e){return new Ps(e.radius,e.detail)}var ot=g("DodecahedronGeometry",it,nt);const Mi={shapes:{type:[Object,Array]},options:{type:Object}};function Ci(e){return new ws(e.shapes,e.options)}var at=g("ExtrudeGeometry",Mi,Ci);const ht={radius:{type:Number,default:1},detail:{type:Number,default:0}};function dt(e){return new xs(e.radius,e.detail)}var ut=g("IcosahedronGeometry",ht,dt);const ct={points:Array,segments:{type:Number,default:12},phiStart:{type:Number,default:0},phiLength:{type:Number,default:Math.PI*2}};function lt(e){return new Ms(e.points,e.segments,e.phiStart,e.phiLength)}var mt=g("LatheGeometry",ct,lt);const pt={radius:{type:Number,default:1},detail:{type:Number,default:0}};function ft(e){return new Cs(e.radius,e.detail)}var yt=g("OctahedronGeometry",pt,ft);const gt={width:{type:Number,default:1},height:{type:Number,default:1},widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1}};function bt(e){return new $e(e.width,e.height,e.widthSegments,e.heightSegments)}var vt=g("PlaneGeometry",gt,bt);const St={vertices:Array,indices:Array,radius:{type:Number,default:1},detail:{type:Number,default:0}};function Pt(e){return new Gs(e.vertices,e.indices,e.radius,e.detail)}var wt=g("PolyhedronGeometry",St,Pt);const xt={innerRadius:{type:Number,default:.5},outerRadius:{type:Number,default:1},thetaSegments:{type:Number,default:8},phiSegments:{type:Number,default:1},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI*2}};function Mt(e){return new Ls(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}var Ct=g("RingGeometry",xt,Mt);const Gt={radius:{type:Number,default:1},widthSegments:{type:Number,default:12},heightSegments:{type:Number,default:12},phiStart:{type:Number,default:0},phiLength:{type:Number,default:Math.PI*2},thetaStart:{type:Number,default:0},thetaLength:{type:Number,default:Math.PI}};function Lt(e){return new Ns(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}var Nt=g("SphereGeometry",Gt,Lt);const Gi={shapes:{type:[Object,Array]},curveSegments:{type:Number}};function Li(e){return new Os(e.shapes,e.curveSegments)}var Ot=g("ShapeGeometry",Gi,Li);const $t={radius:{type:Number,default:1},detail:{type:Number,default:0}};function zt(e){return new $s(e.radius,e.detail)}var Et=g("TetrahedronGeometry",$t,zt);const Rt={radius:{type:Number,default:1},tube:{type:Number,default:.4},radialSegments:{type:Number,default:8},tubularSegments:{type:Number,default:6},arc:{type:Number,default:Math.PI*2}};function jt(e){return new zs(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}var kt=g("TorusGeometry",Rt,jt);const It={radius:{type:Number,default:1},tube:{type:Number,default:.4},tubularSegments:{type:Number,default:64},radialSegments:{type:Number,default:8},p:{type:Number,default:2},q:{type:Number,default:3}};function _t(e){return new Es(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}var Tt=g("TorusKnotGeometry",It,_t);const we={points:Array,path:Rs,tubularSegments:{type:Number,default:64},radius:{type:Number,default:1},radialSegments:{type:Number,default:8},closed:{type:Boolean,default:!1}};function At(e){let t;return e.points?t=new ze(e.points):e.path?t=e.path:console.error("Missing path curve or points."),new js(t,e.tubularSegments,e.radius,e.radiusSegments,e.closed)}var Bt=a({extends:ue,props:we,methods:{createGeometry(){this.geometry=At(this)},updatePoints(e){Dt(this.geometry,e)}}});function Dt(e,t){const r=new ze(t),{radialSegments:s,radius:i,tubularSegments:n,closed:o}=e.parameters,c=r.computeFrenetFrames(n,o);e.tangents=c.tangents,e.normals=c.normals,e.binormals=c.binormals,e.parameters.path=r;const G=e.getAttribute("position"),L=e.getAttribute("normal"),y=new F,N=new F;for(let b=0;b<n;b++)z(b);z(n),e.attributes.position.needsUpdate=!0,e.attributes.normal.needsUpdate=!0;function z(b){r.getPointAt(b/n,N);const U=c.normals[b],H=c.binormals[b];for(let p=0;p<=s;p++){const f=p/s*Math.PI*2,E=Math.sin(f),h=-Math.cos(f);y.x=h*U.x+E*H.x,y.y=h*U.y+E*H.y,y.z=h*U.z+E*H.z,y.normalize();const u=b*(s+1)+p;L.setXYZ(u,y.x,y.y,y.z),G.setXYZ(u,N.x+i*y.x,N.y+i*y.y,N.z+i*y.z)}}}var Y=a({extends:I,name:"Light",props:{color:{type:String,default:"#ffffff"},intensity:{type:Number,default:1},castShadow:{type:Boolean,default:!1},shadowMapSize:{type:Object,default:()=>({x:512,y:512})},shadowCamera:{type:Object,default:()=>({})}},setup(){return{}},unmounted(){(this.light instanceof be||this.light instanceof ve)&&this.removeFromParent(this.light.target)},methods:{initLight(e){this.light=e,e.shadow&&(e.castShadow=this.castShadow,W(e.shadow.mapSize,this.shadowMapSize),W(e.shadow.camera,this.shadowCamera)),["color","intensity","castShadow"].forEach(t=>{d(()=>this[t],r=>{t==="color"?e.color.set(r):e[t]=r})}),this.initObject3D(e),(e instanceof be||e instanceof ve)&&(l(this,"target",e.target,"position"),this.addToParent(e.target))}},__hmrId:"Light"}),Ft=a({extends:Y,created(){this.initLight(new ks(this.color,this.intensity))},__hmrId:"AmbientLight"}),Ut=a({extends:Y,props:{target:{type:Object,default:()=>({x:0,y:0,z:0})}},created(){this.initLight(new ve(this.color,this.intensity))},__hmrId:"DirectionalLight"}),Ht=a({extends:Y,props:{groundColor:{type:String,default:"#444444"}},created(){const e=new Is(this.color,this.groundColor,this.intensity);d(()=>this.groundColor,t=>{e.groundColor.set(t)}),this.initLight(e)},__hmrId:"HemisphereLight"}),Kt=a({extends:Y,props:{distance:{type:Number,default:0},decay:{type:Number,default:1}},created(){this.initLight(new _s(this.color,this.intensity,this.distance,this.decay))},__hmrId:"PointLight"}),Vt=a({extends:Y,props:{width:{type:Number,default:10},height:{type:Number,default:10},helper:Boolean},created(){si.init();const e=new Ts(this.color,this.intensity,this.width,this.height);if(["width","height"].forEach(t=>{d(()=>this[t],r=>{e[t]=r})}),this.helper){const t=new ii(e);e.add(t)}this.initLight(e)},__hmrId:"RectAreaLight"}),Xt=a({extends:Y,props:{angle:{type:Number,default:Math.PI/3},decay:{type:Number,default:1},distance:{type:Number,default:0},penumbra:{type:Number,default:0},target:Object},created(){const e=new be(this.color,this.intensity,this.distance,this.angle,this.penumbra,this.decay);["angle","decay","distance","penumbra"].forEach(t=>{d(()=>this[t],r=>{e[t]=r})}),this.initLight(e)},__hmrId:"SpotLight"});const ce=Symbol("Material"),le=a({emits:["created"],props:{color:{type:String,default:"#ffffff"},props:{type:Object,default:()=>({})}},inject:{mesh:Z},setup(){return{}},provide(){return{[ce]:this}},created(){if(!this.mesh){console.error("Missing parent Mesh");return}if(this.createMaterial){const e=this.material=this.createMaterial();d(()=>this.color,t=>{e.color.set(t)}),B(this,"props",e,!1,this.setProp),this.$emit("created",e),this.mesh.setMaterial(e)}},unmounted(){var e;(e=this.material)==null||e.dispose()},methods:{getMaterialParams(){return{...te(this.$props,["props"]),...this.props}},setProp(e,t,r,s=!1){const i=e[t];i instanceof Q?i.set(r):e[t]=r,e.needsUpdate=s},setTexture(e,t="map"){this.setProp(this.material,t,e,!0)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"Material"});function _(e,t,r){return a({name:e,extends:le,props:t,methods:{createMaterial(){return r(this.getMaterialParams())}}})}const qt=_("BasicMaterial",{props:{type:Object,default:()=>({})}},e=>new Ee(e)),Wt=_("LambertMaterial",{props:{type:Object,default:()=>({})}},e=>new As(e)),Zt=_("PhongMaterial",{props:{type:Object,default:()=>({})}},e=>new Bs(e)),Yt=_("PhysicalMaterial",{props:{type:Object,default:()=>({})}},e=>new Ds(e)),Jt=_("PointsMaterial",{props:{type:Object,default:()=>({})}},e=>new Fs(e)),Qt=_("ShadowMaterial",{color:{type:String,default:"#000000"},props:{type:Object,default:()=>({})}},e=>new Us(e)),er=_("StandardMaterial",{props:{type:Object,default:()=>({})}},e=>new Hs(e)),tr=_("ToonMaterial",{props:{type:Object,default:()=>({})}},e=>new Ks(e));var rr=_("MatcapMaterial",{src:String,name:{type:String,default:"0404E8_0404B5_0404CB_3333FC"}},e=>{const t=e.src?e.src:Pe(e.name),r=te(e,["src","name"]);return r.matcap=new ee().load(t),new Vs(r)});const Ni=`
  varying vec2 vUv;
  void main(){
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);
  }
`,Oi=`
  varying vec2 vUv;
  void main() {
    gl_FragColor = vec4(vUv.x, vUv.y, 0., 1.0);
  }
`;var sr=_("ShaderMaterial",{props:{type:Object,default:()=>({uniforms:{},vertexShader:Ni,fragmentShader:Oi})}},e=>new Se(te(e,["color"])));function $i(e,t,r){return e.split(t).join(r)}const zi=X.meshphong_frag.slice(0,X.meshphong_frag.indexOf("void main() {")),Ei=X.meshphong_frag.slice(X.meshphong_frag.indexOf("void main() {")),Ri={uniforms:Re.merge([Xs.phong.uniforms,{thicknessColor:{value:new Q(16777215)},thicknessDistortion:{value:.1},thicknessAmbient:{value:0},thicknessAttenuation:{value:.1},thicknessPower:{value:2},thicknessScale:{value:10}}]),vertexShader:`
    #define USE_UV
    ${X.meshphong_vert}
  `,fragmentShader:`
    #define USE_UV
    #define SUBSURFACE

    ${zi}

    uniform float thicknessPower;
    uniform float thicknessScale;
    uniform float thicknessDistortion;
    uniform float thicknessAmbient;
    uniform float thicknessAttenuation;
    uniform vec3 thicknessColor;

    void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {
      #ifdef USE_COLOR
        vec3 thickness = vColor * thicknessColor;
      #else
        vec3 thickness = thicknessColor;
      #endif
      vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));
      float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;
      vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;
      reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;
    }
  `+Ei.replace("#include <lights_fragment_begin>",$i(X.lights_fragment_begin,"RE_Direct( directLight, geometry, material, reflectedLight );",`
        RE_Direct( directLight, geometry, material, reflectedLight );
        #if defined( SUBSURFACE ) && defined( USE_UV )
          RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);
        #endif
      `))};var ir=a({extends:le,props:{uniforms:{type:Object,default:()=>({diffuse:"#ffffff",thicknessColor:"#ffffff",thicknessDistortion:.4,thicknessAmbient:.01,thicknessAttenuation:.7,thicknessPower:2,thicknessScale:4})}},methods:{createMaterial(){const e=Ri,t=Re.clone(e.uniforms);return B(this,"uniforms",t,!0,(r,s,i)=>{const n=r[s].value;n instanceof Q?n.set(i):r[s].value=i}),new Se({...e,lights:!0,...this.props,uniforms:t})}}}),me=a({inject:{material:ce},props:{name:{type:String,default:"map"},uniform:String,src:String,onLoad:Function,onProgress:Function,onError:Function,props:{type:Object,default:()=>({})}},setup(){return{}},created(){this.refreshTexture(),d(()=>this.src,this.refreshTexture)},unmounted(){var e,t;(e=this.material)==null||e.setTexture(null,this.name),(t=this.texture)==null||t.dispose()},methods:{createTexture(){if(this.src)return new ee().load(this.src,this.onLoaded,this.onProgress,this.onError)},initTexture(){!this.texture||(B(this,"props",this.texture),this.material&&(this.material.setTexture(this.texture,this.name),this.material.material instanceof Se&&this.uniform&&(this.material.material.uniforms[this.uniform]={value:this.texture})))},refreshTexture(){var e;(e=this.texture)==null||e.dispose(),this.texture=this.createTexture(),this.initTexture()},onLoaded(e){var t;(t=this.onLoad)==null||t.call(this,e)}},render(){return[]}}),nr=a({extends:me,props:{name:{type:String,default:"envMap"},path:{type:String,required:!0},urls:{type:Array,default:()=>["px.jpg","nx.jpg","py.jpg","ny.jpg","pz.jpg","nz.jpg"]},props:{type:Object,default:()=>({mapping:qs})}},created(){d(()=>this.path,this.refreshTexture),d(()=>this.urls,this.refreshTexture)},methods:{createTexture(){return new Ws().setPath(this.path).load(this.urls,this.onLoaded,this.onProgress,this.onError)}}}),or=a({extends:me,props:{videoId:{type:String,required:!0}},created(){d(()=>this.videoId,this.refreshTexture)},methods:{createTexture(){const e=document.getElementById(this.videoId);return new Zs(e)}}}),ar=S("Box",Ve,Xe),hr=S("Circle",We,Ze),dr=S("Cone",Je,Qe),ur=S("Cylinder",tt,rt),cr=S("Dodecahedron",it,nt),lr=S("Icosahedron",ht,dt),mr=S("Lathe",ct,lt),pr=S("Octahedron",pt,ft),fr=S("Plane",gt,bt),yr=S("Polyhedron",St,Pt),gr=S("Ring",xt,Mt),br=S("Sphere",Gt,Lt),vr=S("Tetrahedron",$t,zt);const ji={text:{type:String,required:!0,default:"Text"},fontSrc:{type:String,required:!0},size:{type:Number,default:80},height:{type:Number,default:5},depth:{type:Number,default:1},curveSegments:{type:Number,default:12},bevelEnabled:{type:Boolean,default:!1},bevelThickness:{type:Number,default:10},bevelSize:{type:Number,default:8},bevelOffset:{type:Number,default:0},bevelSegments:{type:Number,default:5},align:{type:[Boolean,String],default:!1}};var Sr=a({extends:K,props:ji,setup(){return{}},created(){if(!this.fontSrc){console.error('Missing required prop: "font-src"');return}["text","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","align"].forEach(t=>{d(()=>this[t],()=>{this.font&&this.refreshGeometry()})});const e=new oi;this.loading=!0,e.load(this.fontSrc,t=>{this.loading=!1,this.font=t,this.createGeometry(),this.initMesh()})},methods:{createGeometry(){this.geometry=new ni(this.text,{font:this.font,size:this.size,height:this.height,depth:this.depth,curveSegments:this.curveSegments,bevelEnabled:this.bevelEnabled,bevelThickness:this.bevelThickness,bevelSize:this.bevelSize,bevelOffset:this.bevelOffset,bevelSegments:this.bevelSegments}),this.align==="center"&&this.geometry.center()}}}),Pr=S("Torus",Rt,jt),wr=S("TorusKnot",It,_t),xr=a({extends:K,props:we,created(){this.createGeometry(),this.addGeometryWatchers(we)},methods:{createGeometry(){this.geometry=At(this)},updatePoints(e){Dt(this.geometry,e)}},__hmrId:"Tube"}),Mr=a({emits:["loaded"],extends:K,props:{src:{type:String,required:!0},width:Number,height:Number,widthSegments:{type:Number,default:1},heightSegments:{type:Number,default:1},keepSize:Boolean},setup(){return{}},created(){!this.renderer||(this.geometry=new $e(1,1,this.widthSegments,this.heightSegments),this.material=new Ee({side:Ys,map:this.loadTexture()}),d(()=>this.src,this.refreshTexture),["width","height"].forEach(e=>{d(()=>this[e],this.resize)}),this.resize(),this.keepSize&&this.renderer.onResize(this.resize))},unmounted(){var e;(e=this.renderer)==null||e.offResize(this.resize)},methods:{loadTexture(){return new ee().load(this.src,this.onLoaded)},refreshTexture(){var e;(e=this.texture)==null||e.dispose(),this.material&&(this.material.map=this.loadTexture(),this.material.needsUpdate=!0)},onLoaded(e){this.texture=e,this.resize(),this.$emit("loaded",e)},resize(){if(!this.renderer||!this.texture)return;const e=this.renderer.size,t=this.texture.image.width,r=this.texture.image.height,s=t/r;let i=1,n=1;this.width&&this.height?(i=this.width*e.wWidth/e.width,n=this.height*e.wHeight/e.height):this.width?(i=this.width*e.wWidth/e.width,n=i/s):this.height?(n=this.height*e.wHeight/e.height,i=n*s):s>1?i=n*s:n=i/s,this.mesh&&(this.mesh.scale.x=i,this.mesh.scale.y=n)}},__hmrId:"Image"}),Cr=a({extends:K,props:{count:{type:Number,required:!0}},methods:{initMesh(){if(this.renderer){if(!this.geometry||!this.material)return console.error("Missing geometry and/or material"),!1;this.mesh=new ge(this.geometry,this.material,this.count),this.mesh.userData.component=this,l(this,"castShadow",this.mesh),l(this,"receiveShadow",this.mesh),(this.onPointerEnter||this.onPointerOver||this.onPointerMove||this.onPointerLeave||this.onPointerDown||this.onPointerUp||this.onClick)&&this.renderer.three.addIntersectObject(this.mesh),this.initObject3D(this.mesh)}}},__hmrId:"InstancedMesh"}),Gr=a({extends:I,emits:["loaded"],props:{src:{type:String,required:!0}},setup(){return{}},created(){this.texture=new ee().load(this.src,this.onLoaded),this.material=new Js({map:this.texture}),this.sprite=new Qs(this.material),this.initObject3D(this.sprite)},unmounted(){var e,t;(e=this.texture)==null||e.dispose(),(t=this.material)==null||t.dispose()},methods:{onLoaded(){this.updateUV(),this.$emit("loaded")},updateUV(){if(!this.texture||!this.sprite)return;const e=this.texture.image.width,t=this.texture.image.height,r=e/t;let s=.5,i=.5;r>1?s=.5*r:i=.5/r;const n=this.sprite.geometry.attributes.position.array;n[0]=-s,n[1]=-i,n[5]=s,n[6]=-i,n[10]=s,n[11]=i,n[15]=-s,n[16]=i,this.sprite.geometry.attributes.position.needsUpdate=!0}},__hmrId:"Sprite"}),Lr=a({extends:I,setup(){return{}},provide(){return{[Z]:this}},mounted(){this.mesh=this.points=new ei(this.geometry,this.material),this.initObject3D(this.mesh)},methods:{setGeometry(e){this.geometry=e,this.mesh&&(this.mesh.geometry=e)},setMaterial(e){this.material=e,this.mesh&&(this.mesh.material=e)}}}),Nr=a({extends:I,emits:["before-load","load","progress","error"],props:{src:{type:String,required:!0}},data(){return{progress:0}},methods:{onLoad(e){this.$emit("load",e)},onProgress(e){this.progress=e.loaded/e.total,this.$emit("progress",e)},onError(e){this.$emit("error",e)}}}),Or=a({extends:Nr,created(){const e=new ai;this.$emit("before-load",e),e.load(this.src,t=>{this.onLoad(t),this.initObject3D(t.scene)},this.onProgress,this.onError)}}),$r=a({extends:Nr,created(){const e=new hi;this.$emit("before-load",e),e.load(this.src,t=>{this.onLoad(t),this.initObject3D(t)},this.onProgress,this.onError)}});const pe=Symbol("Composer");var zr=a({setup(){return{renderer:V($)}},provide(){return{[pe]:this}},created(){if(!this.renderer){console.error("Renderer not found");return}const e=this.renderer,t=new di(this.renderer.renderer);this.composer=t,this.renderer.composer=t,e.addListener("init",()=>{e.renderer.autoClear=!1,this.resize(),e.addListener("resize",this.resize)})},unmounted(){var e;(e=this.renderer)==null||e.removeListener("resize",this.resize)},methods:{addPass(e){var t;(t=this.composer)==null||t.addPass(e)},removePass(e){var t;(t=this.composer)==null||t.removePass(e)},resize(){this.composer&&this.renderer&&this.composer.setSize(this.renderer.size.width,this.renderer.size.height)}},render(){return this.$slots.default?this.$slots.default():[]},__hmrId:"EffectComposer"}),C=a({inject:{renderer:$,composer:pe},emits:["ready"],setup(){return{}},created(){this.composer||console.error("Missing parent EffectComposer"),this.renderer||console.error("Missing parent Renderer")},unmounted(){var e,t,r;this.pass&&((e=this.composer)==null||e.removePass(this.pass),(r=(t=this.pass).dispose)==null||r.call(t))},methods:{initEffectPass(e){var t;this.pass=e,(t=this.composer)==null||t.addPass(e),this.$emit("ready",e)}},render(){return[]},__hmrId:"EffectPass"}),Er=a({extends:C,created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e=new ui(this.renderer.scene,this.renderer.camera);this.initEffectPass(e)},__hmrId:"RenderPass"});const Rr={focus:{type:Number,default:1},aperture:{type:Number,default:.025},maxblur:{type:Number,default:.01}};var jr=a({extends:C,props:Rr,created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e={focus:this.focus,aperture:this.aperture,maxblur:this.maxblur,width:this.renderer.size.width,height:this.renderer.size.height},t=new ci(this.renderer.scene,this.renderer.camera,e);Object.keys(Rr).forEach(r=>{d(()=>this[r],s=>{t.uniforms[r].value=s})}),this.initEffectPass(t)},__hmrId:"BokehPass"});const kr={noiseIntensity:{type:Number,default:.5},scanlinesIntensity:{type:Number,default:.05},scanlinesCount:{type:Number,default:4096},grayscale:{type:Number,default:0}};var Ir=a({extends:C,props:kr,created(){const e=new li(this.noiseIntensity,this.scanlinesIntensity,this.scanlinesCount,this.grayscale);Object.keys(kr).forEach(t=>{d(()=>this[t],r=>{e.uniforms[t].value=r})}),this.initEffectPass(e)},__hmrId:"FilmPass"}),_r=a({extends:C,created(){var e;const t=new oe(mi);(e=this.renderer)==null||e.addListener("resize",this.resize),this.initEffectPass(t)},unmounted(){var e;(e=this.renderer)==null||e.removeListener("resize",this.resize)},methods:{resize({size:e}){if(this.pass){const{resolution:t}=this.pass.material.uniforms;t.value.x=1/e.width,t.value.y=1/e.height}}},__hmrId:"FXAAPass"});const Tr={shape:{type:Number,default:1},radius:{type:Number,default:4},rotateR:{type:Number,default:Math.PI/12*1},rotateG:{type:Number,default:Math.PI/12*2},rotateB:{type:Number,default:Math.PI/12*3},scatter:{type:Number,default:0}};var Ar=a({extends:C,props:Tr,created(){if(!this.renderer)return;const e=new pi(this.renderer.size.width,this.renderer.size.height,{});Object.keys(Tr).forEach(t=>{e.uniforms[t].value=this[t],d(()=>this[t],r=>{e.uniforms[t].value=r})}),this.initEffectPass(e)},__hmrId:"HalftonePass"}),Br=a({extends:C,created(){if(!this.renderer)return;const e=new fi(this.renderer.size.width,this.renderer.size.height);this.initEffectPass(e)},__hmrId:"SMAAPass"}),Dr=a({extends:C,props:{options:{type:Object,default:()=>({})}},created(){if(!this.renderer)return;if(!this.renderer.scene){console.error("Missing Scene");return}if(!this.renderer.camera){console.error("Missing Camera");return}const e=new yi(this.renderer.scene,this.renderer.camera,this.renderer.size.width,this.renderer.size.height);Object.keys(this.options).forEach(t=>{e[t]=this.options[t]}),this.initEffectPass(e)},__hmrId:"SSAOPass"}),Fr={uniforms:{},vertexShader:`
    varying vec2 vUv;
    void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,fragmentShader:`
    varying vec2 vUv;
    void main() {
      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
    }
  `},Ur={uniforms:{tDiffuse:{value:null},blurRadius:{value:0},gradientRadius:{value:0},start:{value:new A},end:{value:new A},delta:{value:new A},texSize:{value:new A}},vertexShader:Fr.vertexShader,fragmentShader:`
    uniform sampler2D tDiffuse;
    uniform float blurRadius;
    uniform float gradientRadius;
    uniform vec2 start;
    uniform vec2 end;
    uniform vec2 delta;
    uniform vec2 texSize;
    varying vec2 vUv;

    float random(vec3 scale, float seed) {
      /* use the fragment position for a different seed per-pixel */
      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);
    }

    void main() {
      vec4 color = vec4(0.0);
      float total = 0.0;

      /* randomize the lookup values to hide the fixed number of samples */
      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);

      vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));
      float radius = smoothstep(0.0, 1.0, abs(dot(vUv * texSize - start, normal)) / gradientRadius) * blurRadius;
      for (float t = -30.0; t <= 30.0; t++) {
          float percent = (t + offset - 0.5) / 30.0;
          float weight = 1.0 - abs(percent);
          vec4 texel = texture2D(tDiffuse, vUv + delta / texSize * percent * radius);
          // vec4 texel2 = texture2D(tDiffuse, vUv + vec2(-delta.y, delta.x) / texSize * percent * radius);

          /* switch to pre-multiplied alpha to correctly blur transparent images */
          texel.rgb *= texel.a;
          // texel2.rgb *= texel2.a;

          color += texel * weight;
          total += 2.0 * weight;
      }

      gl_FragColor = color / total;

      /* switch back from pre-multiplied alpha */
      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;
    }
  `};const ki={blurRadius:{type:Number,default:10},gradientRadius:{type:Number,default:100},start:{type:Object,default:()=>({x:0,y:100})},end:{type:Object,default:()=>({x:10,y:100})}};var Hr=a({extends:C,props:ki,setup(){return{uniforms1:{},uniforms2:{}}},created(){if(!this.composer)return;this.pass1=new oe(Ur),this.pass2=new oe(Ur);const e=this.uniforms1=this.pass1.uniforms,t=this.uniforms2=this.pass2.uniforms;t.blurRadius=e.blurRadius,t.gradientRadius=e.gradientRadius,t.start=e.start,t.end=e.end,t.texSize=e.texSize,l(this,"blurRadius",e.blurRadius,"value"),l(this,"gradientRadius",e.gradientRadius,"value"),this.updateFocusLine(),["start","end"].forEach(r=>{d(()=>this[r],this.updateFocusLine,{deep:!0})}),this.pass1.setSize=(r,s)=>{e.texSize.value.set(r,s)},this.initEffectPass(this.pass1),this.composer.addPass(this.pass2)},unmounted(){this.composer&&this.pass2&&this.composer.removePass(this.pass2)},methods:{updateFocusLine(){this.uniforms1.start.value.copy(this.start),this.uniforms1.end.value.copy(this.end);const e=new A().copy(this.end).sub(this.start).normalize();this.uniforms1.delta.value.copy(e),this.uniforms2.delta.value.set(-e.y,e.x)}},__hmrId:"TiltShiftPass"});const Kr={strength:{type:Number,default:1.5},radius:{type:Number,default:0},threshold:{type:Number,default:0}};var Vr=a({extends:C,props:Kr,created(){if(!this.renderer)return;const e=new A(this.renderer.size.width,this.renderer.size.height),t=new gi(e,this.strength,this.radius,this.threshold);Object.keys(Kr).forEach(r=>{d(()=>this[r],s=>{t.uniforms[r].value=s})}),this.initEffectPass(t)},__hmrId:"UnrealBloomPass"}),Ii={uniforms:{tDiffuse:{value:null},center:{value:new A(.5,.5)},strength:{value:0}},vertexShader:Fr.vertexShader,fragmentShader:`
    uniform sampler2D tDiffuse;
    uniform vec2 center;
    uniform float strength;
    varying vec2 vUv;

    float random(vec3 scale, float seed) {
      /* use the fragment position for a different seed per-pixel */
      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);
    }
    
    void main() {
      vec4 color = vec4(0.0);
      float total = 0.0;
      vec2 toCenter = center - vUv;
      
      /* randomize the lookup values to hide the fixed number of samples */
      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);
      
      for (float t = 0.0; t <= 40.0; t++) {
        float percent = (t + offset) / 40.0;
        float weight = 4.0 * (percent - percent * percent);
        vec4 texel = texture2D(tDiffuse, vUv + toCenter * percent * strength);

        /* switch to pre-multiplied alpha to correctly blur transparent images */
        texel.rgb *= texel.a;

        color += texel * weight;
        total += weight;
      }

      gl_FragColor = color / total;

      /* switch back from pre-multiplied alpha */
      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;
    }
  `},Xr=a({extends:C,props:{center:{type:Object,default:()=>({x:.5,y:.5})},strength:{type:Number,default:.5}},created(){const e=new oe(Ii);l(this,"center",e.uniforms.center,"value"),l(this,"strength",e.uniforms.strength,"value"),this.initEffectPass(e)},__hmrId:"ZoomBlurPass"});const _i={size:{type:Number,required:!0,default:100},divisions:{type:Number,required:!0,default:10},color1:{type:Number,default:2},color2:{type:Number,default:2}};var qr=a({extends:I,name:"GridHelper",props:_i,mounted(){this.mesh||this.initMesh(),["size","divisions","color1","color2"].forEach(e=>{d(()=>this[e],()=>{this.refreshGeometry()})})},unmounted(){this.mesh&&this.removeFromParent(this.mesh)},methods:{initMesh(){var e=new ti(this.size,this.divisions,this.color1,this.color2);e.geometry.rotateX(Math.PI/2),e.material.clippingPlanes=[new J(new F(1,0,0),this.size/4),new J(new F(-1,0,0),this.size/4),new J(new F(0,1,0),this.size/4),new J(new F(0,-1,0),this.size/4)],l(this,"castShadow",e),l(this,"receiveShadow",e),this.mesh=e,this.initObject3D(e)},refreshGeometry(){this.getParent().remove(this.mesh),this.mesh.dispose(),this.initMesh()}}}),Ti=Object.freeze({__proto__:null,Renderer:Ae,RendererInjectionKey:$,OrthographicCamera:De,PerspectiveCamera:he,Camera:he,Group:Ue,Scene:Fe,SceneInjectionKey:de,Object3D:I,Raycaster:He,CubeCamera:Ke,BufferGeometry:ue,BoxGeometry:qe,CircleGeometry:Ye,ConeGeometry:et,CylinderGeometry:st,DodecahedronGeometry:ot,ExtrudeGeometry:at,IcosahedronGeometry:ut,LatheGeometry:mt,OctahedronGeometry:yt,PlaneGeometry:vt,PolyhedronGeometry:wt,RingGeometry:Ct,SphereGeometry:Nt,ShapeGeometry:Ot,TetrahedronGeometry:Et,TorusGeometry:kt,TorusKnotGeometry:Tt,TubeGeometry:Bt,AmbientLight:Ft,DirectionalLight:Ut,HemisphereLight:Ht,PointLight:Kt,RectAreaLight:Vt,SpotLight:Xt,Material:le,BasicMaterial:qt,LambertMaterial:Wt,PhongMaterial:Zt,PhysicalMaterial:Yt,PointsMaterial:Jt,ShadowMaterial:Qt,StandardMaterial:er,ToonMaterial:tr,MaterialInjectionKey:ce,MatcapMaterial:rr,ShaderMaterial:sr,SubSurfaceMaterial:ir,Texture:me,CubeTexture:nr,VideoTexture:or,Mesh:K,MeshInjectionKey:Z,Box:ar,Circle:hr,Cone:dr,Cylinder:ur,Dodecahedron:cr,Icosahedron:lr,Lathe:mr,Octahedron:pr,Plane:fr,Polyhedron:yr,Ring:gr,Sphere:br,Tetrahedron:vr,Text:Sr,Torus:Pr,TorusKnot:wr,Tube:xr,Image:Mr,InstancedMesh:Cr,Sprite:Gr,Points:Lr,GltfModel:Or,FbxModel:$r,EffectComposer:zr,ComposerInjectionKey:pe,RenderPass:Er,EffectPass:C,BokehPass:jr,FilmPass:Ir,FXAAPass:_r,HalftonePass:Ar,SMAAPass:Br,SSAOPass:Dr,TiltShiftPass:Hr,UnrealBloomPass:Vr,ZoomBlurPass:Xr,GridHelper:qr,applyObjectProps:q,bindObjectProp:B,bindObjectProps:je,setFromProp:W,bindProps:ke,bindProp:l,propsValues:te,lerp:Ie,limit:_e,getMatcapUrl:Pe});const Wr={install(e){["Camera","OrthographicCamera","PerspectiveCamera","Raycaster","Renderer","Scene","Group","CubeCamera","AmbientLight","DirectionalLight","HemisphereLight","PointLight","RectAreaLight","SpotLight","BasicMaterial","LambertMaterial","MatcapMaterial","PhongMaterial","PhysicalMaterial","PointsMaterial","ShaderMaterial","StandardMaterial","SubSurfaceMaterial","ToonMaterial","Texture","CubeTexture","BufferGeometry","Mesh","Box","BoxGeometry","Circle","CircleGeometry","Cone","ConeGeometry","Cylinder","CylinderGeometry","Dodecahedron","DodecahedronGeometry","Icosahedron","IcosahedronGeometry","Lathe","LatheGeometry","Octahedron","OctahedronGeometry","Plane","PlaneGeometry","Polyhedron","PolyhedronGeometry","Ring","RingGeometry","Sphere","SphereGeometry","Tetrahedron","TetrahedronGeometry","Text","Torus","TorusGeometry","TorusKnot","TorusKnotGeometry","Tube","TubeGeometry","Image","InstancedMesh","Points","Sprite","FbxModel","GltfModel","BokehPass","EffectComposer","FilmPass","FXAAPass","HalftonePass","RenderPass","SAOPass","SMAAPass","SSAOPass","TiltShiftPass","UnrealBloomPass","ZoomBlurPass"].forEach(t=>{e.component(t,Ti[t])})}};function Ai(e){return ss(e).use(Wr)}function Bi(){const e={loader:new ee,count:0,textures:[],loadProgress:0,loadTextures:t,dispose:s};return e;function t(i,n){e.count=i.length,e.textures.splice(0),e.loadProgress=0,Promise.all(i.map(r)).then(n)}function r(i,n){return new Promise(o=>{e.loader.load(i.src,c=>{e.loadProgress+=1/e.count,e.textures[n]=c,o(c)})})}function s(){e.textures.forEach(i=>i.dispose())}}export{Ft as AmbientLight,qt as BasicMaterial,jr as BokehPass,ar as Box,qe as BoxGeometry,ue as BufferGeometry,he as Camera,hr as Circle,Ye as CircleGeometry,pe as ComposerInjectionKey,dr as Cone,et as ConeGeometry,Ke as CubeCamera,nr as CubeTexture,ur as Cylinder,st as CylinderGeometry,Ut as DirectionalLight,cr as Dodecahedron,ot as DodecahedronGeometry,zr as EffectComposer,C as EffectPass,at as ExtrudeGeometry,_r as FXAAPass,$r as FbxModel,Ir as FilmPass,Or as GltfModel,qr as GridHelper,Ue as Group,Ar as HalftonePass,Ht as HemisphereLight,lr as Icosahedron,ut as IcosahedronGeometry,Mr as Image,Cr as InstancedMesh,Wt as LambertMaterial,mr as Lathe,mt as LatheGeometry,rr as MatcapMaterial,le as Material,ce as MaterialInjectionKey,K as Mesh,Z as MeshInjectionKey,I as Object3D,pr as Octahedron,yt as OctahedronGeometry,De as OrthographicCamera,he as PerspectiveCamera,Zt as PhongMaterial,Yt as PhysicalMaterial,fr as Plane,vt as PlaneGeometry,Kt as PointLight,Lr as Points,Jt as PointsMaterial,yr as Polyhedron,wt as PolyhedronGeometry,He as Raycaster,Vt as RectAreaLight,Er as RenderPass,Ae as Renderer,$ as RendererInjectionKey,gr as Ring,Ct as RingGeometry,Br as SMAAPass,Dr as SSAOPass,Fe as Scene,de as SceneInjectionKey,sr as ShaderMaterial,Qt as ShadowMaterial,Ot as ShapeGeometry,br as Sphere,Nt as SphereGeometry,Xt as SpotLight,Gr as Sprite,er as StandardMaterial,ir as SubSurfaceMaterial,vr as Tetrahedron,Et as TetrahedronGeometry,Sr as Text,me as Texture,Hr as TiltShiftPass,tr as ToonMaterial,Pr as Torus,kt as TorusGeometry,wr as TorusKnot,Tt as TorusKnotGeometry,Wr as TroisJSVuePlugin,xr as Tube,Bt as TubeGeometry,Vr as UnrealBloomPass,or as VideoTexture,Xr as ZoomBlurPass,q as applyObjectProps,B as bindObjectProp,je as bindObjectProps,l as bindProp,ke as bindProps,Ai as createApp,Pe as getMatcapUrl,Ie as lerp,_e as limit,te as propsValues,W as setFromProp,Bi as useTextures};
//# sourceMappingURL=trois.module.cdn.min.js.map
